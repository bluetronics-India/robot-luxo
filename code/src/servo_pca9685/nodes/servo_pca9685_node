#!/usr/bin/env python3
import rospy
import json

from adafruit_servokit import ServoKit
from std_msgs.msg import Float32, Float32MultiArray

def on_command(msg):
    global servo_kit
    if len(msg.data) != 16:
        rospy.logwarn("PCA9685 needs command length == 16, ignoring")
        return

    for i, angle in enumerate(msg.data):
        if msg.data >= 0:
            angle = min(angle, servo_limits[i][1])
            angle = max(angle, servo_limits[i][0])
            servo_kit.servo[i] = angle
        else:
            servo_kit.servo[i] = 0

if __name__ == "__main__":
    rospy.init_node("servo_pca9685_node")
    servo_kit = ServoKit(channels=16)

    topic_command = rospy.get_param("topic_command", "/servo/command", Float32MultiArray)
    try:
        servo_limits = json.loads(rospy.get_param("limits", "[[60,120],[60,120],[60,120],[60,120],[60,120],[60,120],[60,120],[60,120],[60,120],[60,120],[60,120],[60,120],[60,120],[60,120],[60,120],[60,120]]"))
    except json.decoder.JSONDecodeError:
        rospy.logfatal("badly formatted limits")
        exit(0)

    rospy.spin()
    rospy.loginfo("shutdown requested")

